# RISC-V 位移與比較指令整合測試程式
# 檔案：tests/asm_sources/shift_compare_test.asm

# 目的：全面測試位移指令與比較指令功能
# 本測試包含 SLL, SRL, SRA, SRLI, SRAI, SLLI 位移指令
# 以及 SLT, SLTU, SLTI, SLTIU 比較指令的各種測試案例

.globl _start
_start:
    # 初始化測試資料
    addi x1, x0, 0x0F0      # x1 = 0x0F0 (240)
    addi x2, x0, 4          # x2 = 4 (位移量)
    lui x3, 0x80000         # x3 = 0x80000000 (負數最大值)
    addi x4, x0, 0x555      # x4 = 0x555 (1365)
    addi x5, x0, -100       # x5 = -100 (負數)
    addi x6, x0, 100        # x6 = 100 (正數)
    addi x7, x0, 0x7FF      # x7 = 0x7FF (2047)
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # === 位移指令測試 ===
    
    # 測試案例 1：SLL 指令 - 邏輯左移
    # 0x0F0 << 4 = 0x0F00 (240 << 4 = 3840)
    sll x8, x1, x2          # x8 = x1 << x2 (240 << 4 = 3840)
    
    # 測試案例 2：SRL 指令 - 邏輯右移
    # 0x0F0 >> 4 = 0x00F (240 >> 4 = 15)
    srl x9, x1, x2          # x9 = x1 >> x2 (240 >> 4 = 15)
    
    # 測試案例 3：SRA 指令 - 算術右移（負數）
    # 0x80000000 >> 4 = 0xF8000000 (保持符號位)
    sra x10, x3, x2         # x10 = x3 >> x2 (0x80000000 >> 4 = 0xF8000000)
    
    # 測試案例 4：SLLI 指令 - 立即數邏輯左移
    # 0x555 << 3 = 0x2AA8 (1365 << 3 = 10920)
    slli x11, x4, 3         # x11 = x4 << 3 (1365 << 3 = 10920)
    
    # 測試案例 5：SRLI 指令 - 立即數邏輯右移
    # 0x7FF >> 2 = 0x1FF (2047 >> 2 = 511)
    srli x12, x7, 2         # x12 = x7 >> 2 (2047 >> 2 = 511)
    
    # 測試案例 6：SRAI 指令 - 立即數算術右移（負數）
    # -100 >> 2 = -25 (保持符號位)
    srai x13, x5, 2         # x13 = x5 >> 2 (-100 >> 2 = -25)
    
    # === 比較指令測試 ===
    
    # 測試案例 7：SLT 指令 - 有符號比較 (小於)
    # -100 < 100 = 1
    slt x14, x5, x6         # x14 = (x5 < x6) ? 1 : 0 (-100 < 100 = 1)
    
    # 測試案例 8：SLT 指令 - 有符號比較 (大於等於)
    # 100 < -100 = 0
    slt x15, x6, x5         # x15 = (x6 < x5) ? 1 : 0 (100 < -100 = 0)
    
    # 測試案例 9：SLTU 指令 - 無符號比較 (小於)
    # 0xFFFFFF9C < 100 = 0 (無符號比較)
    sltu x16, x5, x6        # x16 = (x5 < x6) ? 1 : 0 (無符號比較)
    
    # 測試案例 10：SLTU 指令 - 無符號比較 (大於)
    # 100 < 0xFFFFFF9C = 1 (無符號比較)
    sltu x17, x6, x5        # x17 = (x6 < x5) ? 1 : 0 (無符號比較)
    
    # 測試案例 11：SLTI 指令 - 有符號立即數比較 (小於)
    # -100 < 50 = 1
    slti x18, x5, 50        # x18 = (x5 < 50) ? 1 : 0 (-100 < 50 = 1)
    
    # 測試案例 12：SLTI 指令 - 有符號立即數比較 (大於等於)
    # 100 < 50 = 0
    slti x19, x6, 50        # x19 = (x6 < 50) ? 1 : 0 (100 < 50 = 0)
    
    # 測試案例 13：SLTIU 指令 - 無符號立即數比較 (小於)
    # 100 < 200 = 1
    sltiu x20, x6, 200      # x20 = (x6 < 200) ? 1 : 0 (無符號比較)
    
    # 測試案例 14：SLTIU 指令 - 無符號立即數比較 (大於等於)
    # 100 < 50 = 0
    sltiu x21, x6, 50       # x21 = (x6 < 50) ? 1 : 0 (無符號比較)
    
    # 測試案例 15：邊界值測試 - 零值比較
    # 0 < 1 = 1
    slt x22, x0, x1         # x22 = (0 < 240) ? 1 : 0 = 1
    
    # 測試案例 16：邊界值測試 - 相等比較
    # 100 < 100 = 0
    slt x23, x6, x6         # x23 = (100 < 100) ? 1 : 0 = 0
    
    # 設定記憶體基底位址
    addi x28, x0, 0x100     # 設定記憶體基底位址 0x100
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 將結果儲存到記憶體中以供驗證
    # 位移指令結果
    sw x8, 0(x28)           # 儲存 SLL 結果 (3840)
    sw x9, 4(x28)           # 儲存 SRL 結果 (15)
    sw x10, 8(x28)          # 儲存 SRA 結果 (0xF8000000)
    sw x11, 12(x28)         # 儲存 SLLI 結果 (10920)
    sw x12, 16(x28)         # 儲存 SRLI 結果 (511)
    sw x13, 20(x28)         # 儲存 SRAI 結果 (-25)
    
    nop
    nop
    nop
    
    # 比較指令結果
    sw x14, 24(x28)         # 儲存 SLT 結果 (1)
    sw x15, 28(x28)         # 儲存 SLT 結果 (0)
    sw x16, 32(x28)         # 儲存 SLTU 結果 (0)
    sw x17, 36(x28)         # 儲存 SLTU 結果 (1)
    sw x18, 40(x28)         # 儲存 SLTI 結果 (1)
    sw x19, 44(x28)         # 儲存 SLTI 結果 (0)
    
    nop
    nop
    nop
    
    sw x20, 48(x28)         # 儲存 SLTIU 結果 (1)
    sw x21, 52(x28)         # 儲存 SLTIU 結果 (0)
    sw x22, 56(x28)         # 儲存 SLT 零值 結果 (1)
    sw x23, 60(x28)         # 儲存 SLT 相等 結果 (0)
    
    # 無限迴圈以停止處理器供觀察
halt_loop:
    beq x0, x0, halt_loop   # 分支到自身（實質上為停止）
    nop                     # 不應該執行到這裡

# 預期結果：
# 位移指令：
# 暫存器 x8  應包含值 3840      (0x0F00)   - SLL 結果
# 暫存器 x9  應包含值 15        (0x00F)    - SRL 結果
# 暫存器 x10 應包含值 -134217728 (0xF8000000) - SRA 結果
# 暫存器 x11 應包含值 10920     (0x2AA8)   - SLLI 結果
# 暫存器 x12 應包含值 511       (0x1FF)    - SRLI 結果
# 暫存器 x13 應包含值 -25       (0xFFFFFFE7) - SRAI 結果
# 
# 比較指令：
# 暫存器 x14 應包含值 1         - SLT 結果 (-100 < 100)
# 暫存器 x15 應包含值 0         - SLT 結果 (100 < -100)
# 暫存器 x16 應包含值 0         - SLTU 結果 (無符號比較)
# 暫存器 x17 應包含值 1         - SLTU 結果 (無符號比較)
# 暫存器 x18 應包含值 1         - SLTI 結果 (-100 < 50)
# 暫存器 x19 應包含值 0         - SLTI 結果 (100 < 50)
# 暫存器 x20 應包含值 1         - SLTIU 結果 (100 < 200)
# 暫存器 x21 應包含值 0         - SLTIU 結果 (100 < 50)
# 暫存器 x22 應包含值 1         - SLT 零值 結果 (0 < 240)
# 暫存器 x23 應包含值 0         - SLT 相等 結果 (100 < 100) 