# RISC-V 加減法整合測試程式
# 檔案：tests/asm_sources/add_sub_integrated_test.asm

# 目的：全面測試加法和減法功能
# 本測試包含多個不同數值的加法和減法測試案例

.globl _start
_start:
    # ===== 加法測試案例 =====
    
    # 測試案例 1：簡單加法 1 + 2 = 3
    addi x2, x0, 1      # x2 = 1
    addi x3, x0, 2      # x3 = 2
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行加法
    add  x4, x2, x3     # x4 = x2 + x3（x4 應為 3）
    
    # 測試案例 2：較大數字的加法 10 + 20 = 30
    addi x5, x0, 10     # x5 = 10
    addi x6, x0, 20     # x6 = 20
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行加法
    add  x7, x5, x6     # x7 = x5 + x6（x7 應為 30）
    
    # 測試案例 3：與負數的加法 5 + (-3) = 2
    addi x8, x0, 5      # x8 = 5
    addi x9, x0, -3     # x9 = -3
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行加法
    add  x10, x8, x9    # x10 = x8 + x9（x10 應為 2）
    
    # 測試案例 4：結果為零的加法 5 + (-5) = 0
    addi x11, x0, 5     # x11 = 5
    addi x12, x0, -5    # x12 = -5
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行加法
    add  x13, x11, x12  # x13 = x11 + x12（x13 應為 0）
    
    # 測試案例 5：與零的加法 7 + 0 = 7
    addi x14, x0, 7     # x14 = 7
    addi x15, x0, 0     # x15 = 0
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行加法
    add  x16, x14, x15  # x16 = x14 + x15（x16 應為 7）
    
    # 測試案例 6：較大數字的加法 100 + 200 = 300
    addi x17, x0, 100   # x17 = 100
    addi x18, x0, 200   # x18 = 200
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行加法
    add  x19, x17, x18  # x19 = x17 + x18（x19 應為 300）
    
    # ===== 減法測試案例 =====
    
    # 測試案例 7：簡單減法 5 - 2 = 3
    addi x20, x0, 5     # x20 = 5
    addi x21, x0, 2     # x21 = 2
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行減法
    sub  x22, x20, x21  # x22 = x20 - x21（x22 應為 3）
    
    # 測試案例 8：較大數字的減法 30 - 10 = 20
    addi x23, x0, 30    # x23 = 30
    addi x24, x0, 10    # x24 = 10
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行減法
    sub  x25, x23, x24  # x25 = x23 - x24（x25 應為 20）
    
    # 測試案例 9：減去負數 3 - (-2) = 5
    addi x26, x0, 3     # x26 = 3
    addi x27, x0, -2    # x27 = -2
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行減法
    sub  x29, x26, x27  # x29 = x26 - x27（x29 應為 5）
    
    # 測試案例 10：結果為零的減法 8 - 8 = 0
    addi x30, x0, 8     # x30 = 8
    addi x31, x0, 8     # x31 = 8
    
    # 插入 NOP 指令以處理管線資料危害
    nop
    nop
    nop
    
    # 執行減法
    sub  x1, x30, x31   # x1 = x30 - x31（x1 應為 0）
    
    # 先設定記憶體基底位址
    addi x28, x0, 0x100  # 設定記憶體基底位址
    
    # 將結果儲存到記憶體中以供驗證（選擇性）
    # 假設記憶體起始位址為 0x100
    # 儲存加法結果
    sw x4, 0(x28)        # 儲存 1 + 2 = 3 的結果
    sw x7, 4(x28)        # 儲存 10 + 20 = 30 的結果
    
    nop
    nop
    nop
    sw x10, 8(x28)       # 儲存 5 + (-3) = 2 的結果
    sw x13, 12(x28)      # 儲存 5 + (-5) = 0 的結果
    sw x16, 16(x28)      # 儲存 7 + 0 = 7 的結果
    sw x19, 20(x28)      # 儲存 100 + 200 = 300 的結果
    
    # 儲存減法結果
    sw x22, 24(x28)      # 儲存 5 - 2 = 3 的結果
    sw x25, 28(x28)      # 儲存 30 - 10 = 20 的結果
    sw x29, 32(x28)      # 儲存 3 - (-2) = 5 的結果
    sw x1, 36(x28)       # 儲存 8 - 8 = 0 的結果
    
    # 無限迴圈以停止處理器供觀察
halt_loop:
    beq  x0, x0, halt_loop # 分支到自身（實質上為停止）
    nop                     # 不應該執行到這裡

# 預期結果：
# === 加法測試 ===
# 暫存器 x4  應包含值 3    (0x3)
# 暫存器 x7  應包含值 30   (0x1E)
# 暫存器 x10 應包含值 2    (0x2)
# 暫存器 x13 應包含值 0    (0x0)
# 暫存器 x16 應包含值 7    (0x7)
# 暫存器 x19 應包含值 300  (0x12C) 
# === 減法測試 ===
# 暫存器 x22 應包含值 3    (0x3)
# 暫存器 x25 應包含值 20   (0x14)
# 暫存器 x29 應包含值 5    (0x5)
# 暫存器 x1  應包含值 0    (0x0) 